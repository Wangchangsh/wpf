[{"categories":["Genomics"],"contents":"   前言  植物基因组普遍存在全基因组加倍融合的现象。在高通量测序read回帖时，常出现多重比对的现象，最终会导致不准确的变异鉴定。SNPable可以鉴定出基因组上多重比对的变异位点。\n   SNPable使用     参考基因组的准备   BWA索引参考基因组 模拟35bp的单端测序文件 回帖 生成mask参考基因组     BWA索引参考基因组  1 2  bwa index ref.fa samtools faidx ref.fa      模拟35bp的单端测序文件  1  splitfa ref.fa 35|split -l 20000000      回帖  1 2  bwa aln -R 1000000 -O 3 -E 3 ref.fa xaa \u0026gt; xaa.sai bwa samse ref.fa xaa.sai xaa \u0026gt; xaa.sam      生成mask参考基因组  1 2  gen_raw_mask.pl *sam \u0026gt; rawMask_35.fa gen_mask -l 35 -r 0.5 rawMask_35.fa \u0026gt; mask_35_50.fa      参考基因组的应用  1 2  apply_mask_s mask_35_50.fa ref.fa \u0026gt; ref.mask.fa apply_mask_l mask_35_50.fa in.pos \u0026gt; out.pos   ","date":"Sep 11","permalink":"https://wangchangsheng.netlify.app/posts/2022-09-11-2/","tags":["SNPable"],"title":"SNPable的使用"},{"categories":["Bioinfor"],"contents":"在新课题和新项目开展时，需要重复他人的实验以确定可靠的流程。一般在文献最后都会附上项目编号PRJNA。SRA数据库的层次结构是SRP(项目)-SRS(样本)-SRX(数据产生)-SRR(数据本身)。数据库的层级是PRJNA-SAMN。\n以高粱比较基因组数据集PRJNA513297为例。\n   NCBI SRA  目前NCBI正在将数据传输至亚马逊云AWS和谷歌云GS，美国境内服务器免费，其他的服务器收费，用户自己掏钱，由于正在迁移，NCBI也不保证数据的完整性。虽然也提供了亚马逊云的免费链接，但是国内实测速度奇慢无比。使用Aspera找不到SRA的下载链接，一般使用NCBI的工具prefetch或fastq-dump。\n先搜索项目号，获取项目详细信息。\n1 2 3 4 5 6  module load Singularity/3.1.1 # 下载数据,若数据量大于20G需加-X参数 awk -F \u0026#39;,\u0026#39; \u0026#39;{print $1}\u0026#39; sample.list|grep SRR|xargs -n 1 singularity exec -e ~/Singularity_lib/download.sif prefetch ## fastq-dump singularity exec -e ~/Singularity_lib/download.sif fastq-dump -A SRRXXX singularity exec -e ~/Singularity_lib/download.sif fastqer-dump -e threads SRRXXX      EMBL ENA  美国的NCBI的SRA与欧洲的EBI-EMBL以及日本的DDBJ数据库共享数据，我们可以使用Aspera在EBA数据中直接下载fastq文件。\n先搜索项目号，点击PRJNA数据集，下载TSV的Download report(无法复制链接在linux下载)。\n1 2  # 下载数据集，此处sample.list为ENA的TSV的Download report grep -v study_accession sample.list|awk -F \u0026#39;[;\\t]\u0026#39; \u0026#39;{print$7\u0026#34;\\t\u0026#34;$8}\u0026#39;|while read i j;do singularity exec -e ~/Singularity_lib/download.sif ascp -i /usr/asperaweb_id_dsa.openssh -v -k 1 -T -l 200m -P 33001 era-fasp@fasp.sra.ebi.ac.uk:${i##*uk} .;singularity exec -e ~/Singularity_lib/download.sif ascp -i /usr/asperaweb_id_dsa.openssh -v -k 1 -T -l 200m -P 33001 era-fasp@fasp.sra.ebi.ac.uk:${j##*uk} .;done   1 2 3 4 5 6 7 8 9 10 11  ascp [options] ssh link dir options: -T 不进行加密，不添加此参数可能无法下载 -i 输入私钥 --host ftp的host名，NCBI为ftp-private.ncbi.nlm.nih.gov;EBI为fasp.sra.ebi.ac.uk --user 用户名，NCBI为anonftp，EBI为era-fasp --mode 选择模式，上传为send，下载为recv -l 设置最大传输速度 -v 详细模式，能及时查看下载进度 -k 断点续传，一般设置为1 -P 提供SSH port，端口一般是33001   Aspera提供\u0026ndash;file-list，支持批量下载多个文件\nfilelist格式\n1 2  /vol1/fastq/SRR126/063/SRR12628363/SRR12628363_1.fastq.gz /vol1/fastq/SRR126/063/SRR12628363/SRR12628363_2.fastq.gz   1  singularity exec -e ~/Singularity_lib/download.sif ascp -i /usr/asperaweb_id_dsa.openssh -T -k 1 -v -l 200m -P 33001 --mode recv --host fasp.sra.ebi.ac.uk --user era-fasp --file-list filelist .      BIGD GSA  GSA是2015年底，中科院北京基因组研究所生命与健康大数据中心开发的原始组学数据归档库。数据模型和数据格式遵照INSDC标准，在功能上等同于NCBI的SRA，EBI的ENA和DDBJ的DRA。目前没有特定的工具，使用wget下载FTP数据。\n以GSA000167为例，先搜索项目号，点击RUN，点入任一样本，点击FTP下载链接。\n1 2 3  wget -c ftp://download.big.ac.cn/gsa/CRA000167/CRR057355/CRR057355_f1.fastq.gz ##批量下载 wget -c -r -np -k -L -p ftp://download.big.ac.cn/gsa/CRA000167/      CNSA  国家基因库序列归档系统（CNSA）是一个归档全球组学数据的系统，致力于组学数据的存储、管理和共享，促进组学数据的再利用，推动生命科学的发展（有GSA还不够？）。目前支持aspera下载。\n以CNP0000049为例，搜索点击go to FTP，复制FTP地址http://ftp.cngb.org/pub/CNSA/data1/CNP0000049。\n1  singularity exec -e ~/Singularity_lib/download.sif ascp -i /usr/asperaweb_id_dsa.openssh -P 33001 -T -k 1 -l 100m aspera_download@183.239.175.39:/pub/CNSA/data1/CNP0000049/ .      recheck  第一轮数据下载完后，由于网络原因不可避免会造成少数样品下载失败，需要找出这些下载失败的样品并重新下载。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14  ls *aspx|while read i;do rm ${i/.aspx/}*;done grep -v study_accession smple.list |awk -F \u0026#39;[;\\t]\u0026#39; \u0026#39;{print$7\u0026#34;\\t\u0026#34;$8}\u0026#39;|while read i j do if [ ! -f \u0026#34;${i##*/}\u0026#34; ] then echo \u0026#34;${i##*/}no found\u0026#34; singularity exec -e ~/Singularity_lib/download.sif ascp -i /usr/asperaweb_id_dsa.openssh -v -k 1 -T -l 200m -P 33001 era-fasp@fasp.sra.ebi.ac.uk:${i##*uk} . fi if [ ! -f \u0026#34;${j##*/}\u0026#34; ] then echo \u0026#34;${j##*/}no found\u0026#34; singularity exec -e ~/Singularity_lib/download.sif ascp -i /usr/asperaweb_id_dsa.openssh -v -k 1 -T -l 200m -P 33001 era-fasp@fasp.sra.ebi.ac.uk:${j##*uk} . fi done      md5check  检查md5码，防止传输错误。\n1 2  grep -f \u0026lt;(ls *.gz) filereport_read_run_PRJEB6180_tsv.txt |awk -F \u0026#39;\\t\u0026#39; \u0026#39;{print $5\u0026#34;\\t\u0026#34;$6}\u0026#39;|sed \u0026#39;s/;/\\t/g;s/\\S\\+\\///g\u0026#39;|awk \u0026#39;{print $1\u0026#34;\\t\u0026#34;$3\u0026#34;\\n\u0026#34;$2\u0026#34;\\t\u0026#34;$4}\u0026#39; \u0026gt; md5.sum md5sum -c md5.sum \u0026gt; md5check.log   ","date":"Mar 16","permalink":"https://wangchangsheng.netlify.app/posts/2022-03-16-/","tags":[],"title":"下载测序数据"},{"categories":["R program"],"contents":"\r\r前言\r在数据分析过程中，总是需要批量操作，如批量保存文件或批量作图。baseR的解法十分简单，for或while循环即可，但不够优雅。下面以tidyverse自带数据diamonds为例，以优雅的tidyverse流代码实现批量操作。\n加载包和数据\rlibrary(tidyverse)\rlibrary(ggprism)\rdata(\u0026quot;diamonds\u0026quot;)\r\r批量保存\rdiamonds %\u0026gt;%\rgroup_nest(cut) %\u0026gt;%\rpwalk(.l = list(.$cut, .$data),\r.f = ~ write.table(x = .y,\rfile = str_c(path, .x, \u0026quot;.txt\u0026quot;),\rcol.names = FALSE,\rrow.names = FALSE,\rquote = FALSE))\r\r批量作图\rdiamonds %\u0026gt;%\rgroup_nest(cut) %\u0026gt;%\rmutate(plot = map(data, ~ ggplot(data = .x) + geom_boxplot(aes(x = clarity, y = price, fill = clarity)) +\rtheme_prism() +\rscale_fill_prism(palette = \u0026quot;winter_bright\u0026quot;))) %\u0026gt;%\rwalk2(.x = .$cut,\r.y = .$plot,\r.f = ~ print(.y))\r若想保存图片，将print替代为ggsave(filename = str_c(path, .x, “.pdf”), plot = .y)。\n\r\r","date":"Mar 15","permalink":"https://wangchangsheng.netlify.app/posts/2022-03-15-r/","tags":["R","Tidyverse"],"title":"R语言批量操作"},{"categories":null,"contents":"Hugo is the world’s fastest framework for building websites. It is written in Go.\nIt makes use of a variety of open source projects including:\n https://github.com/russross/blackfriday https://github.com/alecthomas/chroma https://github.com/muesli/smartcrop https://github.com/spf13/cobra https://github.com/spf13/viper  Learn more and contribute on GitHub.\n","date":"Apr 09","permalink":"https://wangchangsheng.netlify.app/about/","tags":null,"title":"About"},{"categories":null,"contents":"","date":"Jan 01","permalink":"https://wangchangsheng.netlify.app/articles/","tags":null,"title":"Articles"}]