[{"categories":["Genetics"],"contents":"\r前言\r植物的分子遗传研究的重要优势在于遗传群体的易得性。通过设计杂交混合不同来源亲本的基因组，自交获得一系列基因型和表型存在分离的作图群体。\r双亲群体经历的连续世代较少，连锁不平衡衰减较大，即重组事件少，重组片段大。重测序会产生全基因组接近饱和的变异，但二代测序易产生错误，导致错误分型，且相邻的SNP紧密连锁，不适用于关联分析和连锁分析。BIN是染色体上连续的不发生的片段，校正了错误分型，降低了计算消耗，是双亲群体重测序的常用手段。\n\r数据准备\rfounder多态性变异筛选\r\r初过滤标准为PASS，二等位，无缺失，次等位频率为50%，测序深度为平均测序深度的一半至两倍\r\rvcftools --vcf pop.snp.filt.vcf.gz\r--remove-filtered-all\r--max-alleles 2 --min-alleles 2 --max-missing 1\r--maf 0.4\r--max-maf 0.6\r--indv founderA\r--indv founderB\r--max-meanDP 120\r--min-meanDP 30\r--recode --out founder\r\r多态性变异筛选，去除存在杂合的变异\r\rgrep -v \u0026quot;0/1\u0026quot; founder.recode.vcf|awk \u0026#39;{print$1\u0026quot;\\t\u0026quot;$2}\u0026#39;|grep -v \u0026quot;#\u0026quot; \u0026gt; founder.pos\r\rSNPable筛选高质量位点\r\rapply_mask_l mask_35_50.fa founder.pos \u0026gt; foundermask.pos\r\roffspring高质量变异鉴定\r\r初过滤标准为缺失率，maf和founder高质量位点\r\rvcftools\r--gzvcf pop.snp.filt.vcf.gz\r--max-missing 0.8\r--maf 0.05\r--positions foundermask.pos\r--recode\r--out offspring_poly\r\r分割染色体\r\rvcftools\r--vcf offspring_poly.recode.vcf\r--chr Chr1\r--recode\r--out Chr1\r\r\rBIN型重建\r\rvcf转换为SNPbinner输入文件\r\rsuppressMessages(library(vcfR))\rsuppressMessages(library(tidyverse))\rsuppressMessages(library(optparse))\roption_list \u0026lt;- list(\rmake_option(c(\u0026quot;-i\u0026quot;, \u0026quot;--input\u0026quot;), type = \u0026quot;character\u0026quot;, default = FALSE,\raction = \u0026quot;store\u0026quot;, help = \u0026quot;This is input vcf!\u0026quot;),\rmake_option(c(\u0026quot;-o\u0026quot;, \u0026quot;--out\u0026quot;), type = \u0026quot;character\u0026quot;, default = FALSE,\raction = \u0026quot;store\u0026quot;, help = \u0026quot;This is output file!\u0026quot;),\rmake_option(c(\u0026quot;-a\u0026quot;, \u0026quot;--founderA\u0026quot;), type = \u0026quot;character\u0026quot;, default = FALSE,\raction = \u0026quot;store\u0026quot;, help = \u0026quot;This is founder A!\u0026quot;),\rmake_option(c(\u0026quot;-b\u0026quot;, \u0026quot;--founderB\u0026quot;), type = \u0026quot;character\u0026quot;, default = FALSE,\raction = \u0026quot;store\u0026quot;, help = \u0026quot;This is founder B!\u0026quot;)\r)\ropt = parse_args(OptionParser(option_list = option_list, usage = \u0026quot;This Script is for trans vcf to tsv!\u0026quot;))\rvcf \u0026lt;- read.vcfR(opt$input)\rgeno \u0026lt;- vcf %\u0026gt;%\rextract.gt() %\u0026gt;%\ras_tibble(rownames = NA) %\u0026gt;%\rrownames_to_column(var = \u0026quot;markername\u0026quot;) %\u0026gt;%\rmutate(across(.cols = -markername,\r~ str_replace_all(., pattern = \u0026quot;\\\\|\u0026quot;, replacement = \u0026quot;\\\\/\u0026quot;))) %\u0026gt;%\rrename(founderA = !!sym(opt$founderA),\rfounderB = !!sym(opt$founderB)) %\u0026gt;%\rmutate(across(.cols = -markername,\r~ dplyr::case_when(\r. == founderA ~ \u0026quot;a\u0026quot;,\r. == founderB ~ \u0026quot;b\u0026quot;,\r. == \u0026quot;0/1\u0026quot; ~ \u0026quot;h\u0026quot;,\rTRUE ~ \u0026quot;-\u0026quot;\r))) %\u0026gt;%\rmutate(chrom = sapply(str_split(markername, \u0026quot;_\u0026quot;), `[`, 1) %\u0026gt;% str_replace(pattern = \u0026quot;scaffold\u0026quot;, replacement = \u0026quot;\u0026quot;),\rposition = sapply(str_split(markername, \u0026quot;_\u0026quot;), `[`, 2)) %\u0026gt;%\rselect(markername, chrom, position, founderA, founderB, everything())\rwrite_tsv(geno, file = opt$out)\rRscript vcf2tsv.r -i Chr1.recode.vcf -a founderA -b founderB -o Chr1.tsv\r\rsnp to bin\r\rsingularity exec -e ~/Singularity_lib/python2.sif python2.7 ~/software/SNPbinner/snpbinner crosspoints -i Chr1.tsv -o Chr1-crosspoints -r 0.02 -l 38004428\rsingularity exec -e ~/Singularity_lib/python2.sif python2.7 ~/software/SNPbinner/snpbinner bins -i Chr1-crosspoints -o Chr1-bin -l 5000\r\rbin型合并\r\rlibrary(tidyverse)\rfile \u0026lt;- fs::dir_ls(path = \u0026quot;../../project/Bipgenetic/Rape/Data/bin/\u0026quot;)\rtmp \u0026lt;- map_dfr(.x = file,\r.f = ~ read.csv(., header = FALSE) %\u0026gt;%\rpivot_longer(cols = -V1) %\u0026gt;%\rpivot_wider(names_from = V1,\rvalues_from = value) %\u0026gt;%\rselect(-name),\r.id = \u0026quot;Chrtmp\u0026quot;) %\u0026gt;%\rmutate(chrom = str_sub(Chrtmp, start = -10, end = -5),\rmarkername = str_c(chrom, bin_start, sep = \u0026quot;_\u0026quot;)) %\u0026gt;%\rselect(markername, chrom, everything(), -Chrtmp)\r\r遗传作图\r全基因组BIN图\r单家系全基因组BIN图\rsuppressWarnings(suppressMessages(library(tidyverse)))\rsuppressWarnings(suppressMessages(library(qtl)))\rsuppressWarnings(suppressMessages(library(data.table)))\rsuppressWarnings(suppressMessages(library(ggprism)))\rpath \u0026lt;- \u0026quot;C:/Users/wpf/Desktop/project/Bipgenetic/\u0026quot;\rgeno \u0026lt;- readxl::read_excel(path = str_c(path, \u0026quot;Rape/Output/geno.xlsx\u0026quot;)) %\u0026gt;%\ras_tibble() %\u0026gt;%\rmutate(across(.cols = -c(markername, chrom, starts_with(\u0026quot;bin\u0026quot;)),\r~ case_when(\r. == 0 ~ \u0026quot;AA\u0026quot;,\r. == 2 ~ \u0026quot;BB\u0026quot;,\r. == 1 ~ \u0026quot;AB\u0026quot;\r)))\rprefix \u0026lt;- geno %\u0026gt;%\rselect(markername, chrom, starts_with(\u0026quot;bin\u0026quot;))\rtmp \u0026lt;- geno %\u0026gt;%\rselect(-c(markername, chrom, starts_with(\u0026quot;bin\u0026quot;)))\rtmp \u0026lt;- names(geno)[-c(1:5)] %\u0026gt;%\rmap_dfc( ~ geno %\u0026gt;%\rselect(all_of(.x)) %\u0026gt;%\rseparate(col = .x,\rinto = str_c(.x, c(\u0026quot;_HapA\u0026quot;, \u0026quot;_HapB\u0026quot;)),\rsep = 1)) %\u0026gt;%\rbind_cols(prefix) %\u0026gt;%\rpivot_longer(cols = -c(markername, chrom, starts_with(\u0026quot;bin\u0026quot;)),\rnames_to = c(\u0026quot;taxa\u0026quot;, \u0026quot;Hap\u0026quot;),\rnames_sep = \u0026quot;_\u0026quot;,\rvalues_to = \u0026quot;geno\u0026quot;)\rgenome \u0026lt;- tmp %\u0026gt;%\rgroup_by(chrom, Hap) %\u0026gt;%\rsummarise(len = max(bin_end)) %\u0026gt;%\rungroup() %\u0026gt;%\rmutate(chr = sort(rep(seq(1, 19), 2)))\r## `summarise()` has grouped output by \u0026#39;chrom\u0026#39;. You can override using the\r## `.groups` argument.\rtmp %\u0026gt;%\rleft_join(genome, by = c(\u0026quot;chrom\u0026quot;, \u0026quot;Hap\u0026quot;)) %\u0026gt;%\rfilter(taxa %in% c(0, 1)) %\u0026gt;% #作图示例\rgroup_nest(taxa) %\u0026gt;%\rmutate(plot = map(data, ~ ggplot() +\rgeom_bar(data = genome,\rmapping = aes(x = chr, y = len/1e6, group = Hap),\rcolour = \u0026quot;white\u0026quot;,\rstat = \u0026quot;identity\u0026quot;,\rfill = \u0026quot;white\u0026quot;,\rwidth = 0.4,\rposition = position_dodge2(width = 0.5)) +\rscale_x_discrete(limits = unique(genome$chrom),\rposition = \u0026quot;top\u0026quot;) + scale_y_continuous(breaks = seq(0, 80, 10),\rtrans = \u0026quot;reverse\u0026quot;,\rexpand = expansion(mult = c(0.05, 0))) +\rtheme_bw() +\rtheme(legend.position = c(0.8, 0.2),\rplot.background = element_blank() ,\rpanel.grid.major = element_blank(),\rpanel.grid.minor = element_blank() ,\rpanel.border = element_blank(), axis.ticks.x = element_blank(),\raxis.line.y = element_line()) +\rxlab(NULL) + ylab(\u0026quot;Loction (Mb)\u0026quot;) +\rgeom_rect(data = .x,\rmapping = aes(xmin = chr - 0.23,\rxmax = chr + 0.23,\rymin = bin_start/1e6,\rymax = bin_end/1e6,\rfill = geno,\rgroup = Hap),\rposition = position_dodge(width = 0.6)) +\rscale_fill_manual(values = c(\u0026quot;#4197d8\u0026quot;, \u0026quot;#f8c120\u0026quot;),\rname = \u0026quot;Genotype\u0026quot;))) %\u0026gt;%\rwalk2(.x = .$taxa,\r.y = .$plot,\r.f = ~ print(.y))\r#### 群体全基因组BIN图\ngeno \u0026lt;- readxl::read_excel(path = str_c(path, \u0026quot;Rape/Output/geno.xlsx\u0026quot;)) %\u0026gt;%\rselect(-markername, -bin_center, -B409, -`375`) %\u0026gt;%\rpivot_longer(cols = -c(chrom, starts_with(\u0026quot;bin\u0026quot;)),\rnames_to = \u0026quot;taxa\u0026quot;, values_to = \u0026quot;geno\u0026quot;) %\u0026gt;%\rmutate(ind = as.numeric(taxa),\rindd = ind + 1)\rbin \u0026lt;- geno %\u0026gt;%\rgroup_by(chrom) %\u0026gt;%\rsummarise(pos = max(bin_end)) %\u0026gt;%\rmutate(poscum = cumsum(lag(pos, default = 0)),\radd = 4e6,\raddcum = cumsum(lag(add, default = 0)),\rcum = poscum + addcum) %\u0026gt;%\rselect(chrom, cum)\rtmp \u0026lt;- geno %\u0026gt;%\rleft_join(bin, by = \u0026quot;chrom\u0026quot;) %\u0026gt;%\rmutate(start = bin_start + cum,\rend = bin_end + cum)\raxis \u0026lt;- tmp %\u0026gt;%\rgroup_by(chrom) %\u0026gt;%\rsummarise(center = mean(end))\rggplot(data = tmp) +\rgeom_rect(mapping = aes(xmin = ind,\rxmax = indd,\rymin = start/1e6,\rymax = end/1e6,\rfill = geno)) +\rscale_y_continuous(breaks = axis$center/1e6, labels = axis$chrom) +\rscale_x_continuous(expand = expansion(mult = c(-0.05, 0))) +\rscale_fill_manual(values = c(\u0026quot;#4197d8\u0026quot;,\u0026quot;grey60\u0026quot;,\u0026quot;#f8c120\u0026quot;)) +\rtheme_bw() +\rtheme(legend.position = \u0026quot;none\u0026quot;,\rpanel.grid.major = element_blank(),\rpanel.grid.minor = element_blank(),\rpanel.border = element_blank(),\raxis.ticks = element_blank(),\raxis.text.x = element_blank()) +\rxlab(NULL) + ylab(NULL)\r### 遗传连锁图\r利用QTL IciMapping软件计算遗传距离，构建遗传连锁图谱。\n\r遗传连锁图\r\rmap \u0026lt;- readxl::read_excel(path = str_c(path, \u0026quot;Rape/Output/map.xlsx\u0026quot;)) %\u0026gt;%\rmutate(chrom = sapply(str_split(markername, \u0026quot;_\u0026quot;), `[`, 1)) %\u0026gt;%\rselect(markername, chrom, pos) %\u0026gt;%\rcolumn_to_rownames(var = \u0026quot;markername\u0026quot;) %\u0026gt;%\rtable2map()\rplot.map(map)\r+ 共线性点图\ntmp \u0026lt;- map2table(map) %\u0026gt;%\rrownames_to_column(var = \u0026quot;markername\u0026quot;) %\u0026gt;%\rmutate(position = sapply(str_split(markername, \u0026quot;_\u0026quot;), `[`, 2))\rgenetic \u0026lt;- tmp %\u0026gt;%\rgroup_by(chr) %\u0026gt;%\rsummarise(gpos = max(pos)) %\u0026gt;%\rmutate(gposcum = cumsum(lag(gpos, default = 0))) %\u0026gt;%\rselect(chr, gposcum)\rphysic \u0026lt;- tmp %\u0026gt;%\rgroup_by(chr) %\u0026gt;%\rsummarise(ppos = max(as.numeric(position))) %\u0026gt;%\rmutate(pposcum = cumsum(lag(ppos, default = 0))) %\u0026gt;%\rselect(chr, pposcum)\rtmp2 \u0026lt;- tmp %\u0026gt;%\rleft_join(genetic, by = \u0026quot;chr\u0026quot;) %\u0026gt;%\rleft_join(physic, by = \u0026quot;chr\u0026quot;) %\u0026gt;%\rmutate(ppos = as.numeric(position) + pposcum,\rgpos = pos + gposcum)\raxis \u0026lt;- tmp2 %\u0026gt;%\rgroup_by(chr) %\u0026gt;%\rsummarise(xcenter = mean(gpos),\rycenter = mean(ppos)/1e6)\rggplot(data = tmp2, aes(x = gpos, y = ppos/1e6, colour = chr)) +\rgeom_point() +\rscale_x_continuous(breaks = axis$xcenter, labels = axis$chr) +\rscale_y_continuous(breaks = axis$ycenter, labels = axis$chr) +\rtheme_prism() +\rscale_color_manual(values = rep(c(\u0026quot;#4197d8\u0026quot;, \u0026quot;#f8c120\u0026quot;, \u0026quot;#413496\u0026quot;, \u0026quot;#495226\u0026quot;, \u0026quot;#d60b6f\u0026quot;, \u0026quot;#e66519\u0026quot;, \u0026quot;#d581b7\u0026quot;, \u0026quot;#83d3ad\u0026quot;, \u0026quot;#7c162c\u0026quot;, \u0026quot;#26755d\u0026quot;), 12)) +\rtheme(legend.position = \u0026quot;none\u0026quot;,\raxis.ticks = element_blank(),\raxis.text.x = element_text(angle = 45, vjust = 0.6)) +\rxlab(\u0026quot;linkage Group\u0026quot;) + ylab(\u0026quot;Genome\u0026quot;)\r+ 共线性圈图\r使用Tbtools,利用R处理出输入文件\nmap \u0026lt;- readxl::read_excel(path = str_c(path, \u0026quot;Rape/Output/map.xlsx\u0026quot;)) %\u0026gt;%\rmutate(chrom = sapply(str_split(markername, \u0026quot;_\u0026quot;), `[`, 1)) %\u0026gt;%\rselect(markername, chrom, pos)\rgenetic \u0026lt;- map %\u0026gt;%\rgroup_by(chrom) %\u0026gt;%\rsummarise(len = max(pos) * 1e6) %\u0026gt;%\rmutate(chrom = str_c(\u0026quot;LG\u0026quot;, str_pad(row_number(), width = 2, pad = 0)),\rrgb = \u0026quot;210,31,67\u0026quot;) %\u0026gt;%\rselect(chrom, len ,rgb)\rphysic \u0026lt;- map %\u0026gt;%\rmutate(pos = sapply(str_split(markername, \u0026quot;_\u0026quot;), `[`, 2) %\u0026gt;% as.numeric()) %\u0026gt;%\rgroup_by(chrom) %\u0026gt;%\rsummarise(len = max(pos),\rrgb = \u0026quot;51,31,209\u0026quot;)\rgenetic %\u0026gt;%\rbind_rows(physic) %\u0026gt;%\rwrite_tsv(., file = str_c(path, \u0026quot;Rape/Output/Chrlen.tsv\u0026quot;), col_names = FALSE)\rbin \u0026lt;- readxl::read_excel(path = str_c(path,\u0026quot;Rape/Output/geno.xlsx\u0026quot;)) %\u0026gt;%\rselect(markername, chrom, starts_with(\u0026quot;bin\u0026quot;))\rgmap \u0026lt;- readxl::read_excel(path = str_c(path, \u0026quot;Rape/Output/map.xlsx\u0026quot;)) %\u0026gt;%\rgroup_by(chr) %\u0026gt;%\rmutate(chrom = str_c(\u0026quot;LG\u0026quot;, str_pad(chr, width = 2, pad = 0)),\rstart = lag(pos, default = 0) * 1e6,\rend = pos * 1e6)\rcolor \u0026lt;- tibble(\rchrom.y = genetic$chrom,\rrgb = c(\u0026quot;65,151,216\u0026quot;, \u0026quot;248,193,32\u0026quot;, \u0026quot;65,52,150\u0026quot;, \u0026quot;73,82,38\u0026quot;, \u0026quot;214,11,111\u0026quot;, \u0026quot;230,101,25\u0026quot;, \u0026quot;213,129,183\u0026quot;, \u0026quot;131,211,173\u0026quot;, \u0026quot;124,22,44\u0026quot;, \u0026quot;38,117,93\u0026quot;,\r\u0026quot;65,151,216\u0026quot;, \u0026quot;248,193,32\u0026quot;, \u0026quot;65,52,150\u0026quot;, \u0026quot;73,82,38\u0026quot;, \u0026quot;214,11,111\u0026quot;, \u0026quot;230,101,25\u0026quot;, \u0026quot;213,129,183\u0026quot;, \u0026quot;131,211,173\u0026quot;, \u0026quot;124,22,44\u0026quot;)\r)\rres \u0026lt;- bin %\u0026gt;%\rleft_join(gmap, by = \u0026quot;markername\u0026quot;) %\u0026gt;%\rselect(-markername, -bin_center, -pos, -chr) %\u0026gt;%\rmutate(across(.cols = - starts_with(\u0026quot;chr\u0026quot;),\r~ round(.))) %\u0026gt;%\rleft_join(color, by = \u0026quot;chrom.y\u0026quot;)\rwrite_tsv(res, file = str_c(path, \u0026quot;rape/Output/synteny.tsv\u0026quot;), col_names = FALSE)\r### QTL作图\r利用QTL IciMapping软件的ICIM模型进行遗传作图\npath \u0026lt;- \u0026quot;C:/Users/wpf/Desktop/project/WinQTLMAP/ICIM/Rape/BIP/RapeRIL/Results/RapeRIL.ric\u0026quot;\rtmp \u0026lt;- fread(path) %\u0026gt;%\rmutate(chrom = sapply(str_split(LeftMarker, \u0026quot;_\u0026quot;), `[`, 1)) %\u0026gt;%\rselect(TraitName, Chromosome, Position, LOD, chrom) %\u0026gt;%\rgroup_by(TraitName) %\u0026gt;%\rmutate(pos = row_number())\raxis \u0026lt;- tmp %\u0026gt;%\rgroup_by(chrom) %\u0026gt;%\rsummarise(center = mean(pos))\rtmp %\u0026gt;%\rungroup() %\u0026gt;%\rfilter(str_starts(TraitName, \u0026quot;EaC\u0026quot;)) %\u0026gt;%\rgroup_nest(TraitName) %\u0026gt;%\rmutate(plot = map(data, ~ ggplot() +\rgeom_line(data = .x,\rmapping = aes(x = pos, y = LOD, colour = as.factor(Chromosome))) +\rgeom_hline(yintercept = 2.5,\rcolor = \u0026quot;red\u0026quot;,\rlinetype = \u0026quot;dashed\u0026quot;,\ralpha = 0.5) +\rscale_x_continuous(labels = axis$chrom, breaks = axis$center) +\rscale_color_manual(values = rep(c(\u0026quot;#4197d8\u0026quot;, \u0026quot;#f8c120\u0026quot;, \u0026quot;#413496\u0026quot;, \u0026quot;#495226\u0026quot;, \u0026quot;#d60b6f\u0026quot;, \u0026quot;#e66519\u0026quot;, \u0026quot;#d581b7\u0026quot;, \u0026quot;#83d3ad\u0026quot;, \u0026quot;#7c162c\u0026quot;, \u0026quot;#26755d\u0026quot;), 12)) +\rtheme_prism() +\rtheme(legend.position = \u0026quot;none\u0026quot;,\raxis.ticks = element_blank(),\raxis.text.x = element_text(angle = 45)) +\rxlab(NULL) +\rylab(\u0026quot;LOD\u0026quot;))) %\u0026gt;%\rwalk2(.x = .$TraitName,\r.y = .$plot,\r.f = ~ print(.y))\r\r\r\r","date":"Nov 03","permalink":"https://wangchangsheng.netlify.app/posts/2022-11-03-bip/","tags":["genetic map"],"title":"双亲群体的遗传作图"},{"categories":"Genetics","contents":"\r前言\r植物的分子遗传研究的重要优势在于遗传群体的易得性。通过设计杂交混合不同来源亲本的基因组，自交获得一系列基因型和表型存在分离的作图群体。但生产上不依赖种子繁殖的高等植物基因组上往往具有较高的杂合率，且具有强的自交不亲和性，如土豆和柑橘。一般利用两个高度杂合的双亲杂交，构建杂种一代群体，用于育种和遗传分析。\nLep-Map3是一款新颖免费的遗传作图软件，支持大量标记和个体的遗传图谱构建，尤其是低测序深度的全基因组测序数据。\n\r数据准备\r系谱\r系谱文件包含样本名及家系等相关信息，以tab为分隔符，示例如：\n\r\rCHR\rPOS\rF\rF\rF\rF\rF\rF\rF\r\r\r\rCHR\rPOS\rSYH\rZNX\rF1\rF10\rF101\rF103\rF104\r\rCHR\rPOS\r0\r0\rZNX\rZNX\rZNX\rZNX\rZNX\r\rCHR\rPOS\r0\r0\rSYH\rSYH\rSYH\rSYH\rSYH\r\rCHR\rPOS\r2\r1\r0\r0\r0\r0\r0\r\rCHR\rPOS\r0\r0\r0\r0\r0\r0\r0\r\r\r\rline1：家系名称，可多父母多家系\nline2：样本名称\nline3：父本名称，对应第二行第四列\nline4：母本名称，对应第二行第三列\nline5：性别，1为male，2为female，0为unknow\nline6：表型，用不到，全为0\n\r基因型\rVCF文件，必须包含likelihood信息，使用vcftools注意增加–recode-INFO-all参数。\n从GATK的基因型文件，主要处理步骤为\n\r提取SNP\rGATK硬过滤\rFounder多态性变异鉴定\roffspring高质量变异鉴定\rParentCall2格式转换\r\rGATK提取SNP\rsingularity exec -e ~/Singularity_lib/gatk-4.2.2.0.sif gatk SelectVariants -R ~/wpf/Datasets/Reference/Lychee/BWA/Lchinesis_genome.fa -V ../07.VCF/raw/pop.vcf.gz -O ../07.VCF/variant/pop.snp.vcf.gz --select-type-to-include SNP\r\rGATK硬过滤\rsingularity exec -e ~/Singularity_lib/gatk-4.2.2.0.sif gatk VariantFiltration -R ~/wpf/Datasets/Reference/Lychee/BWA/Lchinesis_genome.fa -V ../07.VCF/variant/pop.snp.vcf.gz --filter-name \u0026quot;firstFilter\u0026quot; --filter-expression \u0026quot;QD \u0026lt; 2.0 || MQ \u0026lt; 40.0 || FS \u0026gt; 60.0 || SOR \u0026gt; 3.0 || MQRankSum \u0026lt; -12.5 || ReadPosRankSum \u0026lt; -8.0\u0026quot; -O ../07.VCF/gatkvf/pop.snp.filt.vcf.gz\r\rFounder多态性变异鉴定\r\r初过滤标准为PASS，二等位，无缺失，测序深度为平均测序深度的一半至两倍\r\rvcftools --gzvcf pop.snp.filt.vcf.gz --remove-filtered-all --indv founder1 --indv founder2 --max-alleles 2 --min-alleles 2 --max-missing 1 --max-meanDP 60 --min-meanDP 15 --recode --out founder\r\r多态性具有重组信息的标记筛选，即至少有一个亲本为杂合型\r\rimport re vcf = open(\u0026#39;founder.recode.vcf\u0026#39;)\routput = open(\u0026#39;founder.filter.vcf\u0026#39;,\u0026#39;w\u0026#39;)\rfor i in vcf:\rtry:\rrow = re.split(r\u0026#39;\\t\u0026#39;,i)\rp1 = re.split(r\u0026#39;\\:\u0026#39;,row[9])[0]\rp2 = re.split(r\u0026#39;\\:\u0026#39;,row[10])[0]\rif (p1 == \u0026#39;0/1\u0026#39; or p2 == \u0026#39;0/1\u0026#39;):\routput.write(i)\relse:\rcontinue\rexcept IndexError:\routput.write(i)\rvcf.close()\routput.close()\r\r高质量位点筛选，SNPable筛选出无重复比对的位点\r\rawk \u0026#39;{print$1\u0026quot;\\t\u0026quot;$2}\u0026#39; founder.filter.vcf |grep -v \u0026quot;#\u0026quot; \u0026gt; founder.pos\rapply_mask_l mask_35_50.fa founder.pos \u0026gt; foundermask.pos \r\roffspring高质量变异鉴定\r\r初过滤标准为缺失率，maf和founder高质量位点\r\rvcftools --gzvcf pop.snp.filt.vcf.gz --max-missing 0.8 --maf 0.05 --positions foundermask.pos --recode-INFO-all --recode --out offspring_poly\r\r分割染色体\r\rvcftools --vcf offspring_poly.recode.vcf --chr Chr1 --recode-INFO-all --recode --out Chr1\r\rParentCall2格式转换\r输入为十进制文件，压缩文件会导致读取出错\njava -cp ~/software/LepMAP3/bin/ ParentCall2 data=pedigree.txt vcfFile=Chr1.recode.vcf removeNonInformative=1 \u0026gt; Chr1.call\r\rFiltering2过滤偏分离标记\rjava -cp ~/software/LepMAP3/bin/ Filtering2\rdata=Chr1.call\rremoveNonInformative=1\rdataTolerance=0.001 \u0026gt; Chr1_chisq.call\r\r\r\r无参标记的遗传图谱构建\r无参考基因组项目没接触过，或许GBS或RADseq可以产生这些标记。标记鉴定的基本思路应该是聚类测序read，组装或不组装生成参考序列（以每一种read为独立的参考序列）并鉴定标记，这些标记没有确切的坐标，通过后代的分离重组情况，重建遗传连锁图，确定标记间的相对位置。\n基本流程为\n\rSeparateChromosomes2标记分群\rJoinSingles2All单独标记插补进连锁群\rOrderMarkers2标记排序，计算遗传距离\r\r分群\rjava -cp ~/software/LepMAP3/bin/ SeparateChromosomes2 data=Chr1_chisq.call lodLimit=5 numThreads=8 distortionLod=1 \u0026gt; Chr1_chisq.map\r\r插补\rjava -cp ~/software/LepMAP3/bin/ JoinSingles2All map=Chr1_chisq.map data=Chr1_chisq.call distortionLod=1 numThreads=8 lodLimit=4 iterate=1 \u0026gt; Chr1_chisq_js_iterated.map\r\r排序\rjava -cp ~/software/LepMAP3/bin/ OrderMarkers2 numThreads=20 map=Chr1_chisq_js_iterated.map data=Chr1_chisq.call \u0026gt; Chr1_chisq.order\r\r计算遗传距离\rjava -cp ~/software/LepMAP3/bin/ OrderMarkers2 evaluateOrder=Chr1_chisq.order data=Chr1_chisq.call improveOrder=0 sexAveraged=1 \u0026gt; Chr1_chisq_sexAve.order\rjava -cp ~/software/LepMAP3/bin/ OrderMarkers2 evaluateOrder=Chr1_chisq.order data=Chr1_chisq.call improveOrder=0 \u0026gt; Chr1_chisq_sex.order\r\r\r有参标记的遗传图谱构建\r有参考基因组的标记无需分群排序，按照物理位置的顺序直接计算重组距离。\n标记数量过多，以10kb为window构建遗传连锁图，主要流程为\n\r构建10kb binning图谱\rOrderMarkers2排序\r提取window代表基因型\rOrderMarkers2计算遗传距离\r\rbinning\rawk \u0026#39;BEGIN{print \u0026quot;#binned markers\u0026quot;}(NR\u0026gt;7)\r{if (prevc != $1 || $2-prevp \u0026gt;= 10000) {++n;prevp=$2;prevc=$1}; print n}\u0026#39; Chr1_chisq.call \u0026gt; Chr1_chisq.map\r\r排序\rjava -cp ~/software/LepMAP3/bin/ OrderMarkers2 numThreads=20 map=Chr1_chisq.map data=Chr1_chisq.call recombination1=0 recombination2=0 outputPhasedData=4 \u0026gt; Chr1_chisq.order\r\r提取标记\r利用脚本order2data.awk提取binning标记\n#script for marker binning...\rBEGIN{\r#ACxAG=AA,AC,AG,CG\rmap[\u0026quot;AA\u0026quot;] = \u0026quot;1 0 0 0 0 0 0\u0026quot;#00\rmap[\u0026quot;AC\u0026quot;] = \u0026quot;0 1 0 0 0 0 0\u0026quot;#01\rmap[\u0026quot;AG\u0026quot;] = \u0026quot;0 0 1 0 0 0 0\u0026quot;#10\rmap[\u0026quot;CG\u0026quot;] = \u0026quot;0 0 0 0 0 1 0\u0026quot;#11\rif (chr == \u0026quot;\u0026quot;)\rchr = 1\r}\r/^[^#]/{\rfor (j = 7; j \u0026lt;= NF; ++j)\rif ($j ~ /#$/) {\r$j = substr($j, 1, length($j) - 1)\roldNF = j\rbreak\r}\rif (oldNF == NF)\rnext\rif (prev == \u0026quot;\u0026quot; \u0026amp;\u0026amp; pedigree) {\rs1 = \u0026quot;CHR\\tPOS\u0026quot;\rs2 = \u0026quot;CHR\\tPOS\u0026quot;\rs3 = \u0026quot;CHR\\tPOS\u0026quot;\rs4 = \u0026quot;CHR\\tPOS\u0026quot;\rs5 = \u0026quot;CHR\\tPOS\u0026quot;\rs6 = \u0026quot;CHR\\tPOS\u0026quot;\rf = 1\rnt = 0\rfor (j = 7; j \u0026lt;= oldNF; j+=3) {\rn = length($j) / 2\rs1 = s1 \u0026quot;\\tF\u0026quot; f \u0026quot;\\tF\u0026quot; f\rs2 = s2 \u0026quot;\\t\u0026quot; (nt + 1) \u0026quot;\\t\u0026quot; (nt + 2)\rs3 = s3 \u0026quot;\\t0\\t0\u0026quot;\rs4 = s4 \u0026quot;\\t0\\t0\u0026quot;\rs5 = s5 \u0026quot;\\t1\\t2\u0026quot;\rs6 = s6 \u0026quot;\\t0\\t0\u0026quot;\rfor (i = 1; i \u0026lt;= n; ++i) {\rs1 = s1 \u0026quot;\\tF\u0026quot; f\rs2 = s2 \u0026quot;\\t\u0026quot; (nt + i + 2)\rs3 = s3 \u0026quot;\\t\u0026quot; (nt + 1)\rs4 = s4 \u0026quot;\\t\u0026quot; (nt + 2)\rs5 = s5 \u0026quot;\\t0\u0026quot;\rs6 = s6 \u0026quot;\\t0\u0026quot;\r}\rnt += n + 2\r++f\r}\rprint s1 \u0026quot;\\n\u0026quot; s2 \u0026quot;\\n\u0026quot; s3 \u0026quot;\\n\u0026quot; s4 \u0026quot;\\n\u0026quot; s5 \u0026quot;\\n\u0026quot; s6 }\rs = \u0026quot;\u0026quot;\rnt = 0\rfor (j = 7; j \u0026lt;= oldNF; j+=3) {\rs = s \u0026quot;\\t\u0026quot; map[\u0026quot;AC\u0026quot;] \u0026quot;\\t\u0026quot; map[\u0026quot;AG\u0026quot;]\rn = length($j) / 2\rfor (i = oldNF + nt + 1; i \u0026lt;= oldNF + nt + 4 *n; i+=4)\rs = s \u0026quot;\\t\u0026quot; $i \u0026quot; \u0026quot; $(i+1) \u0026quot; \u0026quot; $(i+2) \u0026quot; 0 0 \u0026quot; $(i+3) \u0026quot; 0\u0026quot;\rnt += 4 * n\r}\rif (prev != s || FILENAME != prevFN)\rprint $1 \u0026quot;\\t\u0026quot; chr s\rprev = s\rprevFN = FILENAME\r}\rawk -vfunnData=1 -f order2data.awk ../02.Orderraw/Chr1_chisq.order |\rawk \u0026#39;{print$1}\u0026#39; \u0026gt; Chr1_chisq.index\rawk \u0026#39;{print$1\u0026quot;\\t\u0026quot;$2}\u0026#39; Chr1_chisq.call |grep Chr1 \u0026gt; Chr1_chisq.pos\rlibrary(tidyverse)\rpos \u0026lt;- read_tsv(\u0026quot;Chr1_chisq.pos\u0026quot;, col_names = FALSE) %\u0026gt;%\rmutate(id = row_number()) index \u0026lt;- read_tsv(\u0026quot;Chr1_chisq.index\u0026quot;, col_names = FALSE) %\u0026gt;%\rrename(id = X1) tmp \u0026lt;- index %\u0026gt;%\rleft_join(pos, by = \u0026quot;id\u0026quot;) %\u0026gt;%\rselect(-id)\rwrite_tsv(tmp, file = \u0026quot;Chr1_chisq_bin.pos\u0026quot;, col_names = FALSE)\rvcftools --vcf Chr1_chisq.recode.vcf --positions Chr1_chisq_bin.pos --recode --recode-INFO-all --out Chr1_chisq_bin\rjava -cp ~/software/LepMAP3/bin/ ParentCall2 data=pedigree.txt vcfFile=Chr1_chisq_bin.recode.vcf \u0026gt; Chr1_chisq_bin.call\r\r计算遗传距离\rawk \u0026#39;{print NR}\u0026#39; Chr1_chisq_bin.pos \u0026gt; Chr1_chisq_bin.order\rjava -cp ~/software/LepMAP3/bin/ OrderMarkers2 evaluateOrder=Chr1_chisq.order data=Chr1_chisq.call improveOrder=0 sexAveraged=1 \u0026gt; Chr1_chisq_sexAve.order\rjava -cp ~/software/LepMAP3/bin/ OrderMarkers2 evaluateOrder=Chr1_chisq.order data=Chr1_chisq.call improveOrder=0 \u0026gt; Chr1_chisq_sex.order\r\r\r转换基因型\r\r利用脚本map2genotypes.awk转换基因型。\r\r#converts phased data to \u0026quot;genotypes\u0026quot;\r#usage: #java ... OrderMarkers2 ... outputPhasedData=1 \u0026gt; order_with_phase_LM3.txt\r#awk [-vchr=X] [-vfullData=1] -f map2genotypes.awk order_with_phase_LM3.txt\r#output columns marker name, chr, male postion, female postion, genotypes coded as \u0026quot;1 1\u0026quot;, \u0026quot;1 2\u0026quot;, \u0026quot;2 2\u0026quot; and 0 as missing\r#providing fullData ouputs parents and pedigree...\rBEGIN{\rmap[\u0026quot;00\u0026quot;]=\u0026quot;1 1\u0026quot;\rmap[\u0026quot;01\u0026quot;]=\u0026quot;1 2\u0026quot;\rmap[\u0026quot;10\u0026quot;]=\u0026quot;2 1\u0026quot;\rmap[\u0026quot;11\u0026quot;]=\u0026quot;2 2\u0026quot;\rmap[\u0026quot;0-\u0026quot;]=\u0026quot;1 0\u0026quot;\rmap[\u0026quot;-0\u0026quot;]=\u0026quot;0 1\u0026quot;\rmap[\u0026quot;-1\u0026quot;]=\u0026quot;0 2\u0026quot;\rmap[\u0026quot;1-\u0026quot;]=\u0026quot;2 0\u0026quot;\rmap[\u0026quot;--\u0026quot;]=\u0026quot;0 0\u0026quot;\rif (chr == \u0026quot;\u0026quot;)\rchr = 0\r}\r(/^[^#]/){\rif (!notFirst \u0026amp;\u0026amp; fullData){\rnotFirst = 1\rs1 = \u0026quot;MARKER\\tCHR\\tMALE_POS\\tFEMALE_POS\u0026quot;\rs2 = \u0026quot;MARKER\\tCHR\\tMALE_POS\\tFEMALE_POS\u0026quot;\rs3 = \u0026quot;MARKER\\tCHR\\tMALE_POS\\tFEMALE_POS\u0026quot;\rs4 = \u0026quot;MARKER\\tCHR\\tMALE_POS\\tFEMALE_POS\u0026quot;\rs5 = \u0026quot;MARKER\\tCHR\\tMALE_POS\\tFEMALE_POS\u0026quot;\rs6 = \u0026quot;MARKER\\tCHR\\tMALE_POS\\tFEMALE_POS\u0026quot;\rfor (i = 7; i\u0026lt;=NF; i+=3) {\rn = length($i) / 2\rp1 = \u0026quot;P\u0026quot; (++numParents)\rp2 = \u0026quot;P\u0026quot; (++numParents)\rs1 = s1 \u0026quot;\\t\u0026quot; p1 \u0026quot;x\u0026quot; p2 \u0026quot;\\t\u0026quot; p1 \u0026quot;x\u0026quot; p2\rs2 = s2 \u0026quot;\\t\u0026quot; p1 \u0026quot;\\t\u0026quot; p2\rs3 = s3 \u0026quot;\\t\u0026quot; 0 \u0026quot;\\t\u0026quot; 0\rs4 = s4 \u0026quot;\\t\u0026quot; 0 \u0026quot;\\t\u0026quot; 0\rs5 = s5 \u0026quot;\\t\u0026quot; 1 \u0026quot;\\t\u0026quot; 2\rs6 = s6 \u0026quot;\\t\u0026quot; 0 \u0026quot;\\t\u0026quot; 0\rfor (j = 1; j \u0026lt;= n; ++j) {\rs1 = s1 \u0026quot;\\t\u0026quot; p1 \u0026quot;x\u0026quot; p2\rs2 = s2 \u0026quot;\\tC\u0026quot; (++numOffspring)\rs3 = s3 \u0026quot;\\t\u0026quot; p1\rs4 = s4 \u0026quot;\\t\u0026quot; p2\rs5 = s5 \u0026quot;\\t0\u0026quot; s6 = s6 \u0026quot;\\t0\u0026quot; }\r}\rprint s1\rprint s2\rprint s3\rprint s4\rprint s5\rprint s6\r}\rs = $1 \u0026quot;\\t\u0026quot; chr \u0026quot;\\t\u0026quot; $2 \u0026quot;\\t\u0026quot; $3\rfor (i = 7; i\u0026lt;=NF; i+=3) {\rif (fullData) #parental data\rs = s \u0026quot;\\t1 2\\t1 2\u0026quot;\rn = length($i) / 2\rp1 = substr($i,1,n)\rp2 = substr($i,n+1)\rfor (j = 1; j \u0026lt;= n; ++j)\rs = s \u0026quot;\\t\u0026quot; map[substr(p1, j, 1) substr(p2, j, 1)]\r}\rprint s\r}\rawk -vfullData=1 -f map2genotypes.awk Chr1_chisq_sex.order \u0026gt; Chr1_chisq_sex.geno\rawk -vfullData=1 -f map2genotypes.awk Chr1_chisq_Avesex.order \u0026gt; Chr1_chisq_sexAve.geno\r\r去除重负和偏分离位点，符合GACD输入标准\r\rgeno \u0026lt;- fread(\u0026quot;Lychee/Output/geno.tsv\u0026quot;) %\u0026gt;%\ras_tibble() %\u0026gt;%\rmutate(chrom = sapply(str_split(marker, \u0026quot;_\u0026quot;), `[`, 1))\r# 去除重复\rtmp \u0026lt;- geno %\u0026gt;%\runite(col = \u0026quot;sig\u0026quot;, names(select(., starts_with(\u0026quot;F\u0026quot;))), sep = \u0026quot;-\u0026quot;, remove = FALSE) %\u0026gt;%\rmutate(leadsig = lead(sig, default = \u0026quot;0\u0026quot;)) %\u0026gt;%\rgroup_by(chrom) %\u0026gt;%\rfilter(sig != leadsig) %\u0026gt;%\rselect(marker, chrom, pos, starts_with(\u0026quot;F\u0026quot;))\r# 去除极端偏分离位点\rtmp2 \u0026lt;- tmp %\u0026gt;%\rrowwise() %\u0026gt;%\rmutate(t = length(unique(c_across(cols = starts_with(\u0026quot;F\u0026quot;))))) %\u0026gt;%\rfilter(t \u0026gt; 1) %\u0026gt;%\rselect(-t)\r\r作图\r遗传连锁图\r利用R/qtl包来绘制中性遗传连锁图谱\nsuppressWarnings(suppressMessages(library(tidyverse)))\rsuppressWarnings(suppressMessages(library(qtl)))\rsuppressWarnings(suppressMessages(library(data.table)))\rsuppressWarnings(suppressMessages(library(ggprism)))\rpath \u0026lt;- \u0026quot;C:/Users/wpf/Desktop/project/Bipgenetic/\u0026quot;\rfile \u0026lt;- fs::dir_ls(path = str_c(path, \u0026quot;Lychee/Data/geno/\u0026quot;), glob = \u0026quot;*Ave*\u0026quot;)\rtmp \u0026lt;- map_dfr(.x = file,\r.f = ~ read_tsv(., skip = 1, col_select = c(1:4),\rshow_col_types = FALSE),\r.id = \u0026quot;Chrtmp\u0026quot;)\rtmp2 \u0026lt;- tmp %\u0026gt;%\rfilter(MARKER != \u0026quot;MARKER\u0026quot;) %\u0026gt;%\rmutate(chrom = sapply(str_split(str_replace(Chrtmp, path, \u0026quot;\u0026quot;), \u0026quot;/|_\u0026quot;), `[`, 4),\rmarkername = str_c(chrom, \u0026quot;-\u0026quot;, MARKER),\rchr = str_sub(chrom, 4) %\u0026gt;% as.numeric(),\rpos = as.numeric(MALE_POS)) %\u0026gt;%\rselect(markername, chr, pos) %\u0026gt;%\rarrange(chr) %\u0026gt;%\rcolumn_to_rownames(var = \u0026quot;markername\u0026quot;)\rmap \u0026lt;- table2map(tmp2)\rplot.map(map)\r\r单家系全基因组基因型图\rLepMap3输出默认的坐标和家系名称，根据实际坐标和名称对原始输出进行预处理\npos \u0026lt;- fs::dir_ls(path = str_c(path, \u0026quot;Lychee/Data/POS/\u0026quot;))\rtmppos \u0026lt;- map_dfr(.x = pos,\r.f = ~ read_tsv(., col_names = FALSE, show_col_types = FALSE),\r.id = NULL) %\u0026gt;%\r`colnames\u0026lt;-`(c(\u0026quot;chrom\u0026quot;, \u0026quot;pos\u0026quot;)) %\u0026gt;%\rgroup_by(chrom) %\u0026gt;%\rmutate(id = row_number(),\rmarkername = str_c(chrom, \u0026quot;-\u0026quot;, id),\rmarker = str_c(chrom, \u0026quot;_\u0026quot;, pos)) %\u0026gt;%\rungroup() %\u0026gt;%\rselect(markername, marker)\rfile \u0026lt;- fs::dir_ls(path = str_c(path, \u0026quot;Lychee/Data/geno/\u0026quot;), glob = \u0026quot;*Ave*\u0026quot;)\rtaxa \u0026lt;- read_tsv(file = str_c(path, \u0026quot;Lychee/extraMaterials/renametaxa.txt\u0026quot;),\rshow_col_types = FALSE,\rcol_names = FALSE)\rtmp \u0026lt;- map_dfr(.x = file,\r.f = ~ read_tsv(., skip = 1, show_col_types = FALSE),\r.id = \u0026quot;Chrtmp\u0026quot;) %\u0026gt;%\rrename_with(.cols = taxa$X2, ~ taxa$X1) %\u0026gt;%\rfilter(MARKER != \u0026quot;MARKER\u0026quot;) %\u0026gt;%\rmutate(chrom = sapply(str_split(str_replace(Chrtmp, path, \u0026quot;\u0026quot;), \u0026quot;/|_\u0026quot;), `[`, 4),\rmarkername = str_c(chrom, \u0026quot;-\u0026quot;, MARKER),\rchr = str_sub(chrom, start = 4) %\u0026gt;% as.numeric(),\rpos = as.numeric(MALE_POS)) %\u0026gt;%\rselect(markername, chr, pos, starts_with(\u0026quot;F\u0026quot;), -FEMALE_POS) %\u0026gt;%\rmutate(across(.cols = starts_with(\u0026quot;F\u0026quot;),\r~ case_when(\r. == \u0026quot;1 2\u0026quot; ~ \u0026quot;AD\u0026quot;,\r. == \u0026quot;1 1\u0026quot; ~ \u0026quot;AC\u0026quot;,\r. == \u0026quot;2 1\u0026quot; ~ \u0026quot;BC\u0026quot;,\r. == \u0026quot;2 2\u0026quot; ~ \u0026quot;BD\u0026quot;\r))) %\u0026gt;%\rleft_join(tmppos, by = \u0026quot;markername\u0026quot;) %\u0026gt;%\rgroup_by(chr) %\u0026gt;%\rmutate(end = sapply(str_split(marker, \u0026quot;_\u0026quot;), `[`, 2) %\u0026gt;% as.numeric(),\rstart = lag(end, default = 0)) %\u0026gt;%\rungroup() %\u0026gt;%\rselect(marker, chr, start, end, starts_with(\u0026quot;F\u0026quot;))\rhead(tmp)\r## # A tibble: 6 × 268\r## marker chr start end F101 F10 F103 F104 F105 F107 F108 F109 F110 ## \u0026lt;chr\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt;\r## 1 Chr10… 10 0 2074 AD AD AD BD AD BD BD BD AC ## 2 Chr10… 10 2074 13977 AD AD AD BD AD BD BD BD AC ## 3 Chr10… 10 13977 32248 AD AD AD BD AD BD BD BD AC ## 4 Chr10… 10 32248 35953 AD AD AD BD AD BD BD BD AC ## 5 Chr10… 10 35953 53527 AD AD AD BD AD BD BD BD AC ## 6 Chr10… 10 53527 79901 AD AD AD BD AD BD BD BD AC ## # … with 255 more variables: F111 \u0026lt;chr\u0026gt;, F112 \u0026lt;chr\u0026gt;, F113 \u0026lt;chr\u0026gt;, F114 \u0026lt;chr\u0026gt;,\r## # F115 \u0026lt;chr\u0026gt;, F116 \u0026lt;chr\u0026gt;, F118 \u0026lt;chr\u0026gt;, F119 \u0026lt;chr\u0026gt;, F1 \u0026lt;chr\u0026gt;, F120 \u0026lt;chr\u0026gt;,\r## # F121 \u0026lt;chr\u0026gt;, F12 \u0026lt;chr\u0026gt;, F122 \u0026lt;chr\u0026gt;, F123 \u0026lt;chr\u0026gt;, F124 \u0026lt;chr\u0026gt;, F125 \u0026lt;chr\u0026gt;,\r## # F126 \u0026lt;chr\u0026gt;, F127 \u0026lt;chr\u0026gt;, F128 \u0026lt;chr\u0026gt;, F129 \u0026lt;chr\u0026gt;, F131 \u0026lt;chr\u0026gt;, F13 \u0026lt;chr\u0026gt;,\r## # F134 \u0026lt;chr\u0026gt;, F135 \u0026lt;chr\u0026gt;, F136 \u0026lt;chr\u0026gt;, F140 \u0026lt;chr\u0026gt;, F141 \u0026lt;chr\u0026gt;, F142 \u0026lt;chr\u0026gt;,\r## # F143 \u0026lt;chr\u0026gt;, F144 \u0026lt;chr\u0026gt;, F145 \u0026lt;chr\u0026gt;, F146 \u0026lt;chr\u0026gt;, F147 \u0026lt;chr\u0026gt;, F148 \u0026lt;chr\u0026gt;,\r## # F149 \u0026lt;chr\u0026gt;, F151 \u0026lt;chr\u0026gt;, F15 \u0026lt;chr\u0026gt;, F152 \u0026lt;chr\u0026gt;, F153 \u0026lt;chr\u0026gt;, F154 \u0026lt;chr\u0026gt;, …\r预处理文件第一列为标记，第二列染色体，第三四列为BIN的起始结束坐标，第五行后是家系基因型。\ngenome \u0026lt;- tmp %\u0026gt;%\rgroup_by(chr) %\u0026gt;%\rsummarise(hapA = max(end),\rhapB = max(end)) %\u0026gt;%\rpivot_longer(cols = -chr,\rnames_to = \u0026quot;Hap\u0026quot;,\rvalues_to = \u0026quot;len\u0026quot;) #基础骨架\rprefix \u0026lt;- tmp %\u0026gt;%\rselect(-starts_with(\u0026quot;F\u0026quot;))\rnames(tmp)[-c(1:3)] %\u0026gt;%\rmap_dfc(~ tmp %\u0026gt;%\rselect(all_of(.x)) %\u0026gt;%\rseparate(col = .x,\rinto = str_c(.x, c(\u0026quot;_hapA\u0026quot;, \u0026quot;_hapB\u0026quot;)),\rsep = 1)) %\u0026gt;% #phasing haplotype\rbind_cols(prefix) %\u0026gt;%\rpivot_longer(cols = starts_with(\u0026quot;F\u0026quot;),\rnames_to = c(\u0026quot;taxa\u0026quot;, \u0026quot;Hap\u0026quot;),\rnames_sep = \u0026quot;_\u0026quot;,\rvalues_to = \u0026quot;geno\u0026quot;) %\u0026gt;%\rfilter(taxa %in% c(\u0026quot;F1\u0026quot;, \u0026quot;F2\u0026quot;)) %\u0026gt;% #以F1和F2作为图示案例\rgroup_nest(taxa) %\u0026gt;%\rmutate(plot = map(data, ~ ggplot() + geom_bar(data = genome,\rmapping = aes(x = chr, y = len/1e6, group = Hap),\rcolour = \u0026quot;white\u0026quot;,\rstat = \u0026quot;identity\u0026quot;,\rfill = \u0026quot;white\u0026quot;,\rwidth = 0.4,\rposition = position_dodge2(width = 0.5)) +\rscale_x_discrete(limits = str_c(\u0026quot;Chr\u0026quot;, seq(1, 15)),\rposition = \u0026quot;top\u0026quot;) + scale_y_continuous(breaks = seq(0, 50, 5), # 酌情调整染色体数目和长度\rtrans = \u0026quot;reverse\u0026quot;,\rexpand = expansion(mult = c(0.05, 0))) + theme_bw() +\rtheme(legend.position = c(0.8, 0.2),\rplot.background = element_blank() ,\rpanel.grid.major = element_blank(),\rpanel.grid.minor = element_blank() ,\rpanel.border = element_blank(), axis.ticks.x = element_blank(),\raxis.line.y = element_line()) +\rxlab(NULL) + ylab(\u0026quot;Loction (Mb)\u0026quot;) +\rgeom_rect(data = .x,\rmapping = aes(xmin = chr - 0.23,\rxmax = chr + 0.23,\rymin = start/1e6,\rymax = end/1e6,\rfill = geno,\rgroup = Hap),\rposition = position_dodge(width = 0.6)) +\rscale_fill_manual(values = c( \u0026quot;#4197d8\u0026quot;, \u0026quot;#f8c120\u0026quot;, \u0026quot;#413496\u0026quot;, \u0026quot;#d60b6f\u0026quot;),\rname = \u0026quot;Genotype\u0026quot;))) %\u0026gt;%\rwalk2(.x = .$taxa,\r.y = .$plot,\r.f = ~ print(.y))\r\rQTL作图\r利用GACD软件进行连锁分析\npath2 \u0026lt;- \u0026quot;C:/Users/wpf/Desktop/project/WinQTLMAP/GACD/Lychee/CDQ/LycheeGACD/Results/LycheeGACD.ric\u0026quot;\rtmp \u0026lt;- fread(path2) %\u0026gt;%\rselect(TraitName, Chromosome, Position, LOD) %\u0026gt;%\rgroup_by(TraitName) %\u0026gt;%\rmutate(pos = row_number()) %\u0026gt;%\rungroup()\raxis \u0026lt;- tmp %\u0026gt;%\rgroup_by(Chromosome) %\u0026gt;%\rsummarise(center = mean(pos))\rtmp %\u0026gt;%\rfilter(str_starts(TraitName, pattern = \u0026quot;biyezhong\u0026quot;)) %\u0026gt;%\rgroup_nest(TraitName) %\u0026gt;%\rmutate(plot = map(data, ~ ggplot() +\rgeom_line(data = .x,\rmapping = aes(x = pos, y = LOD, colour = as.factor(Chromosome))) +\rgeom_hline(yintercept = 2.5,\rcolor = \u0026quot;red\u0026quot;,\rlinetype = \u0026quot;dashed\u0026quot;,\ralpha = 0.5) +\rscale_x_continuous(labels = axis$Chromosome, breaks = axis$center) +\rscale_color_manual(values = rep(c(\u0026quot;#4197d8\u0026quot;, \u0026quot;#f8c120\u0026quot;, \u0026quot;#413496\u0026quot;, \u0026quot;#495226\u0026quot;, \u0026quot;#d60b6f\u0026quot;, \u0026quot;#e66519\u0026quot;, \u0026quot;#d581b7\u0026quot;, \u0026quot;#83d3ad\u0026quot;, \u0026quot;#7c162c\u0026quot;, \u0026quot;#26755d\u0026quot;), 12)) +\rtheme_prism() +\rtheme(legend.position = \u0026quot;none\u0026quot;,\raxis.ticks = element_blank()) +\rxlab(NULL) +\rylab(\u0026quot;LOD\u0026quot;))) %\u0026gt;%\rwalk2(.x = .$TraitName,\r.y = .$plot,\r.f = ~ print(.y))\r\r\r","date":"Nov 03","permalink":"https://wangchangsheng.netlify.app/posts/2022-11-03-f1/","tags":["genetic map","Lep-Map3"],"title":"高杂合率F1群体的遗传作图"},{"categories":["Genomics"],"contents":"   前言  植物基因组普遍存在全基因组加倍融合的现象。在高通量测序read回帖时，常出现多重比对的现象，最终会导致不准确的变异鉴定。SNPable可以鉴定出基因组上多重比对的变异位点。\n   SNPable使用     参考基因组的准备   BWA索引参考基因组 模拟35bp的单端测序文件 回帖 生成mask参考基因组     BWA索引参考基因组  1 2  bwa index ref.fa samtools faidx ref.fa      模拟35bp的单端测序文件  1  splitfa ref.fa 35|split -l 20000000      回帖  1 2  bwa aln -R 1000000 -O 3 -E 3 ref.fa xaa \u0026gt; xaa.sai bwa samse ref.fa xaa.sai xaa \u0026gt; xaa.sam      生成mask参考基因组  1 2  gen_raw_mask.pl *sam \u0026gt; rawMask_35.fa gen_mask -l 35 -r 0.5 rawMask_35.fa \u0026gt; mask_35_50.fa      参考基因组的应用  1 2  apply_mask_s mask_35_50.fa ref.fa \u0026gt; ref.mask.fa apply_mask_l mask_35_50.fa in.pos \u0026gt; out.pos   ","date":"Sep 11","permalink":"https://wangchangsheng.netlify.app/posts/2022-09-11-2/","tags":["SNPable"],"title":"SNPable的使用"},{"categories":["Bioinfor"],"contents":"在新课题和新项目开展时，需要重复他人的实验以确定可靠的流程。一般在文献最后都会附上项目编号PRJNA。SRA数据库的层次结构是SRP(项目)-SRS(样本)-SRX(数据产生)-SRR(数据本身)。数据库的层级是PRJNA-SAMN。\n以高粱比较基因组数据集PRJNA513297为例。\n   NCBI SRA  目前NCBI正在将数据传输至亚马逊云AWS和谷歌云GS，美国境内服务器免费，其他的服务器收费，用户自己掏钱，由于正在迁移，NCBI也不保证数据的完整性。虽然也提供了亚马逊云的免费链接，但是国内实测速度奇慢无比。使用Aspera找不到SRA的下载链接，一般使用NCBI的工具prefetch或fastq-dump。\n先搜索项目号，获取项目详细信息。\n1 2 3 4 5 6  module load Singularity/3.1.1 # 下载数据,若数据量大于20G需加-X参数 awk -F \u0026#39;,\u0026#39; \u0026#39;{print $1}\u0026#39; sample.list|grep SRR|xargs -n 1 singularity exec -e ~/Singularity_lib/download.sif prefetch ## fastq-dump singularity exec -e ~/Singularity_lib/download.sif fastq-dump -A SRRXXX singularity exec -e ~/Singularity_lib/download.sif fastqer-dump -e threads SRRXXX      EMBL ENA  美国的NCBI的SRA与欧洲的EBI-EMBL以及日本的DDBJ数据库共享数据，我们可以使用Aspera在EBA数据中直接下载fastq文件。\n先搜索项目号，点击PRJNA数据集，下载TSV的Download report(无法复制链接在linux下载)。\n1 2  # 下载数据集，此处sample.list为ENA的TSV的Download report grep -v study_accession sample.list|awk -F \u0026#39;[;\\t]\u0026#39; \u0026#39;{print$7\u0026#34;\\t\u0026#34;$8}\u0026#39;|while read i j;do singularity exec -e ~/Singularity_lib/download.sif ascp -i /usr/asperaweb_id_dsa.openssh -v -k 1 -T -l 200m -P 33001 era-fasp@fasp.sra.ebi.ac.uk:${i##*uk} .;singularity exec -e ~/Singularity_lib/download.sif ascp -i /usr/asperaweb_id_dsa.openssh -v -k 1 -T -l 200m -P 33001 era-fasp@fasp.sra.ebi.ac.uk:${j##*uk} .;done   1 2 3 4 5 6 7 8 9 10 11  ascp [options] ssh link dir options: -T 不进行加密，不添加此参数可能无法下载 -i 输入私钥 --host ftp的host名，NCBI为ftp-private.ncbi.nlm.nih.gov;EBI为fasp.sra.ebi.ac.uk --user 用户名，NCBI为anonftp，EBI为era-fasp --mode 选择模式，上传为send，下载为recv -l 设置最大传输速度 -v 详细模式，能及时查看下载进度 -k 断点续传，一般设置为1 -P 提供SSH port，端口一般是33001   Aspera提供\u0026ndash;file-list，支持批量下载多个文件\nfilelist格式\n1 2  /vol1/fastq/SRR126/063/SRR12628363/SRR12628363_1.fastq.gz /vol1/fastq/SRR126/063/SRR12628363/SRR12628363_2.fastq.gz   1  singularity exec -e ~/Singularity_lib/download.sif ascp -i /usr/asperaweb_id_dsa.openssh -T -k 1 -v -l 200m -P 33001 --mode recv --host fasp.sra.ebi.ac.uk --user era-fasp --file-list filelist .      BIGD GSA  GSA是2015年底，中科院北京基因组研究所生命与健康大数据中心开发的原始组学数据归档库。数据模型和数据格式遵照INSDC标准，在功能上等同于NCBI的SRA，EBI的ENA和DDBJ的DRA。目前没有特定的工具，使用wget下载FTP数据。\n以GSA000167为例，先搜索项目号，点击RUN，点入任一样本，点击FTP下载链接。\n1 2 3  wget -c ftp://download.big.ac.cn/gsa/CRA000167/CRR057355/CRR057355_f1.fastq.gz ##批量下载 wget -c -r -np -k -L -p ftp://download.big.ac.cn/gsa/CRA000167/      CNSA  国家基因库序列归档系统（CNSA）是一个归档全球组学数据的系统，致力于组学数据的存储、管理和共享，促进组学数据的再利用，推动生命科学的发展（有GSA还不够？）。目前支持aspera下载。\n以CNP0000049为例，搜索点击go to FTP，复制FTP地址http://ftp.cngb.org/pub/CNSA/data1/CNP0000049。\n1  singularity exec -e ~/Singularity_lib/download.sif ascp -i /usr/asperaweb_id_dsa.openssh -P 33001 -T -k 1 -l 100m aspera_download@183.239.175.39:/pub/CNSA/data1/CNP0000049/ .      recheck  第一轮数据下载完后，由于网络原因不可避免会造成少数样品下载失败，需要找出这些下载失败的样品并重新下载。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14  ls *aspx|while read i;do rm ${i/.aspx/}*;done grep -v study_accession smple.list |awk -F \u0026#39;[;\\t]\u0026#39; \u0026#39;{print$7\u0026#34;\\t\u0026#34;$8}\u0026#39;|while read i j do if [ ! -f \u0026#34;${i##*/}\u0026#34; ] then echo \u0026#34;${i##*/}no found\u0026#34; singularity exec -e ~/Singularity_lib/download.sif ascp -i /usr/asperaweb_id_dsa.openssh -v -k 1 -T -l 200m -P 33001 era-fasp@fasp.sra.ebi.ac.uk:${i##*uk} . fi if [ ! -f \u0026#34;${j##*/}\u0026#34; ] then echo \u0026#34;${j##*/}no found\u0026#34; singularity exec -e ~/Singularity_lib/download.sif ascp -i /usr/asperaweb_id_dsa.openssh -v -k 1 -T -l 200m -P 33001 era-fasp@fasp.sra.ebi.ac.uk:${j##*uk} . fi done      md5check  检查md5码，防止传输错误。\n1 2  grep -f \u0026lt;(ls *.gz) filereport_read_run_PRJEB6180_tsv.txt |awk -F \u0026#39;\\t\u0026#39; \u0026#39;{print $5\u0026#34;\\t\u0026#34;$6}\u0026#39;|sed \u0026#39;s/;/\\t/g;s/\\S\\+\\///g\u0026#39;|awk \u0026#39;{print $1\u0026#34;\\t\u0026#34;$3\u0026#34;\\n\u0026#34;$2\u0026#34;\\t\u0026#34;$4}\u0026#39; \u0026gt; md5.sum md5sum -c md5.sum \u0026gt; md5check.log   ","date":"Mar 16","permalink":"https://wangchangsheng.netlify.app/posts/2022-03-16-/","tags":[],"title":"下载测序数据"},{"categories":["R program"],"contents":"\r\r前言\r在数据分析过程中，总是需要批量操作，如批量保存文件或批量作图。baseR的解法十分简单，for或while循环即可，但不够优雅。下面以tidyverse自带数据diamonds为例，以优雅的tidyverse流代码实现批量操作。\n加载包和数据\rlibrary(tidyverse)\rlibrary(ggprism)\rdata(\u0026quot;diamonds\u0026quot;)\r\r批量保存\rdiamonds %\u0026gt;%\rgroup_nest(cut) %\u0026gt;%\rpwalk(.l = list(.$cut, .$data),\r.f = ~ write.table(x = .y,\rfile = str_c(path, .x, \u0026quot;.txt\u0026quot;),\rcol.names = FALSE,\rrow.names = FALSE,\rquote = FALSE))\r\r批量作图\rdiamonds %\u0026gt;%\rgroup_nest(cut) %\u0026gt;%\rmutate(plot = map(data, ~ ggplot(data = .x) + geom_boxplot(aes(x = clarity, y = price, fill = clarity)) +\rtheme_prism() +\rscale_fill_prism(palette = \u0026quot;winter_bright\u0026quot;))) %\u0026gt;%\rwalk2(.x = .$cut,\r.y = .$plot,\r.f = ~ print(.y))\r若想保存图片，将print替代为ggsave(filename = str_c(path, .x, “.pdf”), plot = .y)。\n\r\r","date":"Mar 15","permalink":"https://wangchangsheng.netlify.app/posts/2022-03-15-r/","tags":["R","Tidyverse"],"title":"R语言批量操作"},{"categories":null,"contents":"Hugo is the world’s fastest framework for building websites. It is written in Go.\nIt makes use of a variety of open source projects including:\n https://github.com/russross/blackfriday https://github.com/alecthomas/chroma https://github.com/muesli/smartcrop https://github.com/spf13/cobra https://github.com/spf13/viper  Learn more and contribute on GitHub.\n","date":"Apr 09","permalink":"https://wangchangsheng.netlify.app/about/","tags":null,"title":"About"},{"categories":null,"contents":"","date":"Jan 01","permalink":"https://wangchangsheng.netlify.app/articles/","tags":null,"title":"Articles"}]